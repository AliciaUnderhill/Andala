{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/app.js","webpack:///./js/canvas.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;ACnEA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;ACVD;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,IAAI,eAAe;AACrF;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,8BAA8B;AACxC;AACA;AACA,UAAU,8BAA8B;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/app.js\");\n","// import Grid from './grid';\nimport Canvas from './canvas';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const grid = new Grid();\n  // grid.buildGrid();\n\n  const canvas = new Canvas('andala-canvas');\n  // canvas.setupCanvas();\n\n});\n","class Canvas {\n  constructor(id){\n    this.canvasElement = document.getElementById(id);\n    this.ctx = this.canvasElement.getContext('2d');\n\n    this.axisPoint = [400, 325];\n    this.symDirection = 'VERTICAL';\n    this.radialOrder = 0;\n\n    this.startCoordinates = [];\n    this.nextCoordinates = [];\n    this.drawing = false;\n    this.lineWidth = 3;\n    this.strokeStyle = 'red';\n\n    this.determineDraw = this.determineDraw.bind(this);\n\n    this.canvasElement.addEventListener('mousedown', (e) => this.setDrawingParameters('DOWN', e));\n    this.canvasElement.addEventListener('mouseup', (e) => this.setDrawingParameters('UP', e));\n    this.canvasElement.addEventListener('mousemove', this.determineDraw);\n\n  }\n\n  determineDraw(e){\n    if (this.drawing){\n      this.setCoordinates(e, 'NEXT');\n\n      this.startCoordinates.forEach((coordPair, idx) => {\n        this.ctx.moveTo(coordPair[0], coordPair[1]);\n        this.ctx.lineTo(this.nextCoordinates[idx][0], this.nextCoordinates[idx][1]);\n        this.ctx.lineWidth = this.lineWidth;\n        this.ctx.strokeStyle = this.strokeStyle;\n        this.ctx.stroke();\n\n        this.startCoordinates[idx] = this.nextCoordinates[idx];\n      });\n      }\n    }\n\n  setDrawingParameters(action, e){\n    switch (action) {\n      case 'DOWN':\n        this.drawing = true;\n        this.setCoordinates(e, 'START');\n        // console.log(`starting coordinates are ${this.startingX}, ${this.startingY}`);\n        return;\n      case 'UP':\n        this.drawing = false;\n        // console.log(`now drawing is ${this.drawing}`);\n        return;\n      }\n    }\n\n  setCoordinates(e, startOrNext){\n\n    let firstPair, symmetricPairSet;\n    switch(this.symDirection){\n      case 'HORIZONTAL':\n        ({ firstPair, symmetricPairSet } = this.computeAxisSymPairs(e, 'HORIZONTAL'));\n        break;\n      case 'VERTICAL':\n        ({ firstPair, symmetricPairSet } = this.computeAxisSymPairs(e, 'VERTICAL'));\n        break;\n      case 'RADIAL':\n\n        break;\n    }\n\n    if (startOrNext === 'START'){\n      this.startCoordinates = [firstPair].concat(symmetricPairSet);\n      // this.startCoordinates.push(symmetricPairSet);\n    } else {\n      this.nextCoordinates = [firstPair].concat(symmetricPairSet);\n      // this.nextCoordinates.push(symmetricPairSet);\n    }\n  }\n\n  computeAxisSymPairs(e, axis){\n    const firstPair = [e.clientX, e.clientY];\n    // console.log(`the clicked pair is ${firstPair}`);\n    let symmetricPairX, symmetricPairY, symmetricPairSet;\n    switch (axis) {\n      case 'HORIZONTAL':\n        symmetricPairX = e.clientX;\n        symmetricPairY = ((this.axisPoint[1] - e.clientY) * 2) + e.clientY;\n        symmetricPairSet = [[symmetricPairX, symmetricPairY]];\n        return { firstPair, symmetricPairSet };\n      case 'VERTICAL':\n        symmetricPairX = ((this.axisPoint[0] - e.clientX) * 2) + e.clientX;\n        symmetricPairY = e.clientY;\n        symmetricPairSet = [[symmetricPairX, symmetricPairY]];\n        return { firstPair, symmetricPairSet };\n    }\n  }\n\n\n}\n\nexport default Canvas;\n"],"sourceRoot":""}